name: verl github runner demo
description: 'Build github runner with vemlp'
inputs:
  mode:
    description: >-
      "create" or "destory"
    required: true
  faas-url: 
    description: >-
      Fass url
      This input is required if you use the 'create' mode.
    required: false
  mlp-image: 
    description: >-
      Vemlp image
      This input is required if you use the 'create' mode.
    required: false
  mlp-task-id:
    description: >-
      MLP task id
      This input is required if you use the 'destory' mode.
    required: false
outputs:
    runner-label: 
      description: 'runner label'
      value: ${{ steps.process-runner.outputs.runner_label }}
    mlp-task-id:
      description: 'mlp task id'
      value: ${{ steps.process-runner.outputs.mlp_task_id }}
runs:
  using: "composite"
  steps:
    - name: process runner
      id: process-runner
      run: |
        RETRY_DELAY=$((RANDOM % 11))
        if [[ "${{ inputs.mode }}" == "create" ]]; then
          resp=$(curl -X POST "${{ inputs.faas-url }}/create" \
          -d '{"Image": "${{ inputs.mlp-image }}"}')
          echo $resp
          status_code=$(echo $resp | jq -r '.error.status_code // empty')
          if [[ "$status_code" == "429" ]]; then
            echo "Received 429 error. Retrying in $RETRY_DELAY seconds..."
            sleep $RETRY_DELAY
            resp=$(curl -X POST "${{ inputs.faas-url }}/create" \
            -d '{"Image": "${{ inputs.mlp-image }}"}')
            echo $resp
          fi
          runner_label=$(echo $resp | jq -r '.runner_label')
          echo $runner_label
          if [[ -z $runner_label || $runner_label == "null" ]]; then
            echo "create runner failed"
            exit 1
          fi
          echo "runner_label=$runner_label" >> $GITHUB_OUTPUT   
          mlp_task_id=$(echo $resp | jq -r '.task_id')
          echo mlp_task_id "$mlp_task_id"
          echo "mlp_task_id=$mlp_task_id" >> $GITHUB_OUTPUT
        else
          resp=$(curl -X POST "${{ env.DYNAMIC_RUNNER_ENDPOINT }}/delete" \
          -d '{"TaskId": "${{ inputs.mlp-task-id }}"}')
        fi
      shell: bash
